# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Setup JFrog CLI via OIDC
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: https://hkjc.jfrog.io
        # 可选：JF_PROJECT: your-project-key
      with:
        oidc-provider-name: jfrog-oidc     # 必须与 JFrog 中“Provider Name”一致
        oidc-audience: jfrog-oidc       # 与 JFrog 集成里允许的 audience 对齐
      # 下面就是正常用 CLI 的命令
    - name: Ping
      run: jf rt ping

    - name: Upload artifact
      run: jf rt u "*.md" "alleyooptest-generic-local" --flat=true
